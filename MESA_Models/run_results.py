import pandas as pd
from matplotlib import pyplot as plt


# TODO: have way of changing this path
agent_data_pickle = pd.read_pickle('/Users/heisenberg/IP/MESA_Models/results/Inter-Firm/test_14/agent_data.pkl')
model_data_pickle = pd.read_pickle('/Users/heisenberg/IP/MESA_Models/results/Inter-Firm/test_14/model_data.pkl')

print(model_data_pickle)

plt.subplot(3,2,1)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Utilisation.where(model_data_pickle['schedulingType']=='FIFO'),color='blue')
plt.title('Utilisation')
plt.xlabel('FIFO')
plt.subplot(3,2,2)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Utilisation.where(model_data_pickle['schedulingType']=='Moores'),color='red')
plt.xlabel('Moores')
plt.subplot(3,2,3)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Utilisation.where(model_data_pickle['schedulingType']=='SPT'),color='green')
plt.xlabel('SPT')
plt.subplot(3,2,4)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Utilisation.where(model_data_pickle['schedulingType']=='MDD'),color='black')
plt.xlabel('MDD')
plt.subplot(3,2,5)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Utilisation.where(model_data_pickle['schedulingType']=='EDD'),color='orange')
plt.xlabel('EDD')
plt.tight_layout()
plt.show()

plt.subplot(3,2,1)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Complete_Orders.where(model_data_pickle['schedulingType']=='FIFO'),color='blue')
plt.title('Total Successful Orders')
plt.xlabel('FIFO')
plt.subplot(3,2,2)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Complete_Orders.where(model_data_pickle['schedulingType']=='Moores'),color='red')
plt.xlabel('Moores')
plt.subplot(3,2,3)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Complete_Orders.where(model_data_pickle['schedulingType']=='SPT'),color='green')
plt.xlabel('SPT')
plt.subplot(3,2,4)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Complete_Orders.where(model_data_pickle['schedulingType']=='MDD'),color='black')
plt.xlabel('MDD')
plt.subplot(3,2,5)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Complete_Orders.where(model_data_pickle['schedulingType']=='EDD'),color='orange')
plt.xlabel('EDD')
plt.tight_layout()
plt.show()

plt.subplot(3,2,1)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Successful_Orders.where(model_data_pickle['schedulingType']=='FIFO'),color='blue')
plt.title('% Successful Orders')
plt.xlabel('FIFO')
plt.subplot(3,2,2)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Successful_Orders.where(model_data_pickle['schedulingType']=='Moores'),color='red')
plt.xlabel('Moores')
plt.subplot(3,2,3)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Successful_Orders.where(model_data_pickle['schedulingType']=='SPT'),color='green')
plt.xlabel('SPT')
plt.subplot(3,2,4)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Successful_Orders.where(model_data_pickle['schedulingType']=='MDD'),color='black')
plt.xlabel('MDD')
plt.subplot(3,2,5)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Successful_Orders.where(model_data_pickle['schedulingType']=='EDD'),color='orange')
plt.xlabel('EDD')
plt.tight_layout()
plt.show()


plt.subplot(3,2,1)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['schedulingType']=='FIFO'),color='blue')
plt.title('Average Order Wait Time')
plt.xlabel('FIFO')
plt.subplot(3,2,2)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['schedulingType']=='Moores'),color='red')
plt.xlabel('Moores')
plt.subplot(3,2,3)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['schedulingType']=='SPT'),color='green')
plt.xlabel('SPT')
plt.subplot(3,2,4)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['schedulingType']=='MDD'),color='black')
plt.xlabel('MDD')
plt.subplot(3,2,5)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['schedulingType']=='EDD'),color='orange')
plt.xlabel('EDD')
plt.tight_layout()
plt.show()


plt.subplot(3,2,1)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Messages_Sent.where(model_data_pickle['schedulingType']=='FIFO'),color='blue')
plt.title('Messages Sent')
plt.xlabel('FIFO')
plt.subplot(3,2,2)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Messages_Sent.where(model_data_pickle['schedulingType']=='Moores'),color='red')
plt.xlabel('Moores')
plt.subplot(3,2,3)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Messages_Sent.where(model_data_pickle['schedulingType']=='SPT'),color='green')
plt.xlabel('SPT')
plt.subplot(3,2,4)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Messages_Sent.where(model_data_pickle['schedulingType']=='MDD'),color='black')
plt.xlabel('MDD')
plt.subplot(3,2,5)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Messages_Sent.where(model_data_pickle['schedulingType']=='EDD'),color='orange')
plt.xlabel('EDD')
plt.tight_layout()
plt.show()

plt.subplot(3,2,1)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Late_Orders.where(model_data_pickle['schedulingType']=='FIFO'),color='blue')
plt.title('Late orders')
plt.xlabel('FIFO')
plt.subplot(3,2,2)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Late_Orders.where(model_data_pickle['schedulingType']=='Moores'),color='red')
plt.xlabel('Moores')
plt.subplot(3,2,3)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Late_Orders.where(model_data_pickle['schedulingType']=='SPT'),color='green')
plt.xlabel('SPT')
plt.subplot(3,2,4)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Late_Orders.where(model_data_pickle['schedulingType']=='MDD'),color='black')
plt.xlabel('MDD')
plt.subplot(3,2,5)
plt.scatter(model_data_pickle.splitSize,model_data_pickle.Late_Orders.where(model_data_pickle['schedulingType']=='EDD'),color='orange')
plt.xlabel('EDD')
plt.tight_layout()
plt.show()

# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Utilisation.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Utilisation.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('Utilisation')
# plt.legend()
# plt.show()
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Complete_Orders.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Complete_Orders.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Complete_Orders.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Complete_Orders.where(model_data_pickle['splitSize']==4),label=4)

# plt.title('Total Successful Orders')
# plt.legend()
# plt.show()

# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Successful_Orders.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Successful_Orders.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Successful_Orders.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Successful_Orders.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('% Successful Orders')
# plt.legend()
# plt.show()

# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Average_Order_Wait_Time.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('Average_Order_Wait_Time')
# plt.legend()
# plt.show()

# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Messages_Sent.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Messages_Sent.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Messages_Sent.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Messages_Sent.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('Messages_Sent')
# plt.legend()
# plt.show()
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Late_Orders.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Late_Orders.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Late_Orders.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Late_Orders.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('Late_Orders')
# plt.legend()
# plt.show()

# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Sent.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Sent.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Sent.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Sent.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('Max_Messages_Sent')
# plt.legend()
# plt.show()
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Received.where(model_data_pickle['splitSize']==1),label=1)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Received.where(model_data_pickle['splitSize']==2),label=2)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Received.where(model_data_pickle['splitSize']==3),label=3)
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.Max_Messages_Received.where(model_data_pickle['splitSize']==4),label=4)
# plt.title('Max_Messages_Received')
# plt.legend()
# plt.show()
# plt.scatter(agent_data_pickle.id,agent_data_pickle.id)
# plt.show()

# TODO: these tests are agent based, not model based as you
# plt.scatter(model_data_pickle.schedulingType,model_data_pickle.WIP_Backlog)
# plt.title('WIP_Backlog')
# plt.show()


# # print(agent_data_pickle.head())

# # end_messages = agent_data_pickle.xs(5, level ="AgentID")
# # end_messages.messages_sent.plot()


# plt.show()